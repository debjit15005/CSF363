<<module compute>>
takes input [x:integer, x: boolean, p:real];
returns [m:integer, n:integer, u: boolean];
start
	declare x: boolean;
	declare y: integer;
	while(x OR y>=3)
	start
		x := true;
	end
	declare z: integer;
end	


<<<driver program>>>
start
	declare A:array[1..15] of real;
	declare k:integer;
	declare s:real;
	get_value(k);
	use module readArr with parameters A,k;
	[s]:= use module arraySum with parameters A,k;
	print(s);
end

**The following module reads k  values one by one**
** the array elements are populated with the read values**
**The array variable is not returned as the translation will**
**use the same locations for array elements**

<<module readArr>>
takes input [arr1:array[-10..25] of real,k:integer];
start
	declare tempvar:real;
	declare i:integer;

	i:=1;
	while(i<=k)
	start
		get_value(tempvar);
		arr1[i]:=tempvar;
                declare B:array[-p..+q] of boolean;
                tempvar:=-(tempvar+ B[a+b*c]+A[+5]-A[-10]);
		B[k]:=-10;
		i:=i+1;
		** the semantics of while needs an increment and will be taken care of at the second phase**
	end
end
